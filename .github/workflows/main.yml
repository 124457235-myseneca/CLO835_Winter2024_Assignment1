name: Deploy to ECR
# updated secrets
on: 
  push:
    branches: [ prod ]

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

   
    steps:

    - name: Check out code
      uses: actions/checkout@v3

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        AWS_REGION: us-east-1

    - name: Build, test, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ecr_assignment1
        IMAGE_TAG_APP: APP_v0.2
        IMAGE_TAG_DB: DB_v0.1
      run: |
        cd appnode/
        # Docker build command
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_DB -f Dockerfile_mysql .
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_APP -f Dockerfile .
        
        # Unit test
        ##docker network create --driver=bridge --subnet=192.168.0.0/24 --gateway=192.168.0.1 assignment-1
        #docker network create --driver=bridge --subnet=192.168.0.0/24 --gateway=192.168.0.1 assignment-1
        #export DBHOST=192.168.0.2
        #export DBPORT=3306
        #export DBUSER=root
        #export DBPWD=pw
        #docker run --net assignment-1 --name my_db -d -e MYSQL_ROOT_PASSWORD=pw $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_DB
        #docker run --net assignment-1  -d -p 8081:8080 --name blue -e DBHOST=$DBHOST -e DBPORT=$DBPORT -e  DBUSER=$DBUSER -e DBPWD=$DBPWD $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_APP
        #docker run -d -p 8081:8080 --name blue -e DBHOST=$DBHOST -e DBPORT=$DBPORT -e  DBUSER=$DBUSER -e DBPWD=$DBPWD $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_APP 
        #docker ps
        #echo "Pause for 10 seconds to let container start"
        #sleep 10
        #curl localhost:8081 -vvv
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_APP
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_DB
        
